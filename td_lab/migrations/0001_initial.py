# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-07-04 22:49
from __future__ import unicode_literals

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import django_revision.revision_field
import edc_base.model.fields.custom_fields
import edc_base.model.fields.hostname_modification_field
import edc_base.model.fields.userfield
import edc_base.model.fields.uuid_auto_field
import edc_base.model.validators.date


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lab_packing', '0001_initial'),
        ('edc_registration', '0001_initial'),
        ('td_maternal', '0001_initial'),
        ('td_infant', '0001_initial'),
        ('lab_clinic_api', '0006_auto_20160704_2249'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aliquot',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('aliquot_identifier', models.CharField(editable=False, help_text='Aliquot identifier', max_length=25, unique=True, verbose_name='Aliquot Identifier')),
                ('aliquot_datetime', models.DateTimeField(default=datetime.datetime(2016, 7, 4, 22, 48, 20, 928896), verbose_name='Date and time aliquot created')),
                ('count', models.IntegerField(editable=False, null=True)),
                ('medium', models.CharField(choices=[('tube_any', 'Tube'), ('tube_edta', 'Tube EDTA'), ('swab', 'Swab'), ('dbs_card', 'DBS Card')], default='TUBE', max_length=25, verbose_name='Medium')),
                ('original_measure', models.DecimalField(decimal_places=2, default='5.00', max_digits=10)),
                ('current_measure', models.DecimalField(decimal_places=2, default='5.00', max_digits=10)),
                ('measure_units', models.CharField(choices=[('mL', 'mL'), ('uL', 'uL'), ('spots', 'spots'), ('n/a', 'Not Applicable')], default='mL', max_length=25)),
                ('status', models.CharField(choices=[('available', 'available'), ('consumed', 'consumed')], default='available', max_length=25)),
                ('comment', models.CharField(blank=True, max_length=50, null=True)),
                ('subject_identifier', models.CharField(editable=False, help_text='non-user helper field to simplify search and filtering', max_length=50, null=True)),
                ('is_packed', models.BooleanField(default=False, verbose_name='packed')),
                ('receive_identifier', models.CharField(editable=False, help_text='non-user helper field to simplify search and filter', max_length=25, null=True)),
                ('exported', models.BooleanField(default=False, editable=False, help_text="system field for export tracking. considered 'exported' if both sent and received.")),
                ('exported_datetime', models.DateTimeField(editable=False, help_text='system field for export tracking.', null=True)),
                ('export_change_type', models.CharField(choices=[('I', 'Insert'), ('U', 'Update'), ('D', 'Delete')], default='I', editable=False, help_text='system field for export tracking.', max_length=1)),
                ('export_uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False, help_text='system field for export tracking.')),
                ('is_rejected', models.BooleanField(default=False, verbose_name='rejected')),
            ],
        ),
        migrations.CreateModel(
            name='AliquotCondition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('name', models.CharField(db_index=True, help_text='(suggest 40 characters max.)', max_length=250, null=True, unique=True, verbose_name='Name')),
                ('short_name', models.CharField(db_index=True, help_text='This is the stored value, required', max_length=250, null=True, unique=True, verbose_name='Stored value')),
                ('display_index', models.IntegerField(db_index=True, default=0, help_text='Index to control display order if not alphabetical, not required', verbose_name='display index')),
                ('field_name', models.CharField(blank=True, editable=False, help_text='Not required', max_length=25, null=True)),
                ('version', models.CharField(default='1.0', editable=False, max_length=35)),
            ],
        ),
        migrations.CreateModel(
            name='AliquotProcessing',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('exported', models.BooleanField(default=False, editable=False, help_text="system field for export tracking. considered 'exported' if both sent and received.")),
                ('exported_datetime', models.DateTimeField(editable=False, help_text='system field for export tracking.', null=True)),
                ('export_change_type', models.CharField(choices=[('I', 'Insert'), ('U', 'Update'), ('D', 'Delete')], default='I', editable=False, help_text='system field for export tracking.', max_length=1)),
                ('export_uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False, help_text='system field for export tracking.')),
                ('print_labels', models.BooleanField(default=True, help_text='If checked, labels will be printed immediately.', verbose_name='Print aliquot labels now')),
                ('aliquot', models.ForeignKey(help_text='Create aliquots from this one.', on_delete=django.db.models.deletion.CASCADE, to='td_lab.Aliquot', verbose_name='Source Aliquot')),
            ],
            options={
                'db_table': 'td_lab_processing',
            },
        ),
        migrations.CreateModel(
            name='AliquotProfile',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Profile Name')),
            ],
            options={
                'db_table': 'td_lab_profile',
            },
        ),
        migrations.CreateModel(
            name='AliquotProfileItem',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('volume', models.DecimalField(decimal_places=1, max_digits=10, null=True, verbose_name='Volume (ml)')),
                ('count', models.IntegerField(verbose_name='aliquots to create')),
            ],
            options={
                'db_table': 'td_lab_profileitem',
            },
        ),
        migrations.CreateModel(
            name='AliquotType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('name', models.CharField(max_length=50, verbose_name='Description')),
                ('alpha_code', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator('^[A-Z]{2,15}$')], verbose_name='Alpha code')),
                ('numeric_code', models.CharField(max_length=2, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]{2}$')], verbose_name='Numeric code (2-digit)')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InfantRequisition',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model.validators.date.datetime_not_before_study_start, edc_base.model.validators.date.datetime_not_future], verbose_name='Report Date')),
                ('exported', models.BooleanField(default=False, editable=False, help_text="system field for export tracking. considered 'exported' if both sent and received.")),
                ('exported_datetime', models.DateTimeField(editable=False, help_text='system field for export tracking.', null=True)),
                ('export_change_type', models.CharField(choices=[('I', 'Insert'), ('U', 'Update'), ('D', 'Delete')], default='I', editable=False, help_text='system field for export tracking.', max_length=1)),
                ('export_uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False, help_text='system field for export tracking.')),
                ('subject_identifier', models.CharField(editable=False, max_length=25, null=True)),
                ('requisition_identifier', models.CharField(max_length=50, unique=True, verbose_name='Requisition Id')),
                ('requisition_datetime', models.DateTimeField(verbose_name='Requisition Date')),
                ('specimen_identifier', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True, verbose_name='Specimen Id')),
                ('protocol', models.CharField(blank=True, help_text='Use three digit code e.g 041, 056, 062, etc', max_length=10, null=True, verbose_name='Protocol Number')),
                ('study_site', models.CharField(max_length=10, null=True)),
                ('clinician_initials', edc_base.model.fields.custom_fields.InitialsField(blank=True, default='--', help_text='Type 2-3 letters, all in uppercase and no spaces', max_length=3, null=True, verbose_name='Initials')),
                ('priority', models.CharField(choices=[('normal', 'Normal'), ('urgent', 'Urgent')], default='normal', max_length=25, verbose_name='Priority')),
                ('is_drawn', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', help_text='If No, provide a reason below', max_length=3, verbose_name='Was a specimen drawn?')),
                ('reason_not_drawn', models.CharField(blank=True, choices=[('collection_failed', 'Tried, but unable obtaining sample from patient'), ('absent', 'Patient did not attend visit'), ('refused', 'Patient refused'), ('no_supplies', 'No supplies')], max_length=25, null=True, verbose_name='If not drawn, please explain')),
                ('drawn_datetime', models.DateTimeField(blank=True, help_text='If not drawn, leave blank. Same as date and time of finger prick in case on DBS.', null=True, verbose_name='Date / Time Specimen Drawn')),
                ('item_type', models.CharField(choices=[('tube', 'Tube'), ('swab', 'Swab'), ('dbs', 'DBS Card'), ('other', 'Other')], default='tube', max_length=25, verbose_name='Item collection type')),
                ('item_count_total', models.IntegerField(default=1, help_text='Number of tubes, samples, cards, etc being sent for this test/order only. Determines number of labels to print', verbose_name='Total number of items')),
                ('estimated_volume', models.DecimalField(decimal_places=2, default=5.0, help_text='If applicable, estimated volume of sample for this test/order. This is the total volume if number of "tubes" above is greater than 1', max_digits=7, verbose_name='Estimated volume in mL')),
                ('comments', models.TextField(blank=True, max_length=25, null=True)),
                ('is_receive', models.BooleanField(default=False, verbose_name='received')),
                ('is_receive_datetime', models.DateTimeField(blank=True, null=True, verbose_name='rcv-date')),
                ('is_packed', models.BooleanField(default=False, verbose_name='packed')),
                ('is_labelled', models.BooleanField(default=False, verbose_name='labelled')),
                ('is_labelled_datetime', models.DateTimeField(blank=True, null=True, verbose_name='label-date')),
                ('is_lis', models.BooleanField(default=False, verbose_name='lis')),
                ('aliquot_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td_lab.AliquotType')),
                ('infant_visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td_infant.InfantVisit')),
            ],
            options={
                'verbose_name_plural': 'Infant Laboratory Requisition',
                'verbose_name': 'Infant Laboratory Requisition',
            },
        ),
        migrations.CreateModel(
            name='MaternalRequisition',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('report_datetime', models.DateTimeField(default=django.utils.timezone.now, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_base.model.validators.date.datetime_not_before_study_start, edc_base.model.validators.date.datetime_not_future], verbose_name='Report Date')),
                ('exported', models.BooleanField(default=False, editable=False, help_text="system field for export tracking. considered 'exported' if both sent and received.")),
                ('exported_datetime', models.DateTimeField(editable=False, help_text='system field for export tracking.', null=True)),
                ('export_change_type', models.CharField(choices=[('I', 'Insert'), ('U', 'Update'), ('D', 'Delete')], default='I', editable=False, help_text='system field for export tracking.', max_length=1)),
                ('export_uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False, help_text='system field for export tracking.')),
                ('subject_identifier', models.CharField(editable=False, max_length=25, null=True)),
                ('requisition_identifier', models.CharField(max_length=50, unique=True, verbose_name='Requisition Id')),
                ('requisition_datetime', models.DateTimeField(verbose_name='Requisition Date')),
                ('specimen_identifier', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True, verbose_name='Specimen Id')),
                ('protocol', models.CharField(blank=True, help_text='Use three digit code e.g 041, 056, 062, etc', max_length=10, null=True, verbose_name='Protocol Number')),
                ('study_site', models.CharField(max_length=10, null=True)),
                ('clinician_initials', edc_base.model.fields.custom_fields.InitialsField(blank=True, default='--', help_text='Type 2-3 letters, all in uppercase and no spaces', max_length=3, null=True, verbose_name='Initials')),
                ('priority', models.CharField(choices=[('normal', 'Normal'), ('urgent', 'Urgent')], default='normal', max_length=25, verbose_name='Priority')),
                ('is_drawn', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', help_text='If No, provide a reason below', max_length=3, verbose_name='Was a specimen drawn?')),
                ('reason_not_drawn', models.CharField(blank=True, choices=[('collection_failed', 'Tried, but unable obtaining sample from patient'), ('absent', 'Patient did not attend visit'), ('refused', 'Patient refused'), ('no_supplies', 'No supplies')], max_length=25, null=True, verbose_name='If not drawn, please explain')),
                ('drawn_datetime', models.DateTimeField(blank=True, help_text='If not drawn, leave blank. Same as date and time of finger prick in case on DBS.', null=True, verbose_name='Date / Time Specimen Drawn')),
                ('item_type', models.CharField(choices=[('tube', 'Tube'), ('swab', 'Swab'), ('dbs', 'DBS Card'), ('other', 'Other')], default='tube', max_length=25, verbose_name='Item collection type')),
                ('item_count_total', models.IntegerField(default=1, help_text='Number of tubes, samples, cards, etc being sent for this test/order only. Determines number of labels to print', verbose_name='Total number of items')),
                ('estimated_volume', models.DecimalField(decimal_places=2, default=5.0, help_text='If applicable, estimated volume of sample for this test/order. This is the total volume if number of "tubes" above is greater than 1', max_digits=7, verbose_name='Estimated volume in mL')),
                ('comments', models.TextField(blank=True, max_length=25, null=True)),
                ('is_receive', models.BooleanField(default=False, verbose_name='received')),
                ('is_receive_datetime', models.DateTimeField(blank=True, null=True, verbose_name='rcv-date')),
                ('is_packed', models.BooleanField(default=False, verbose_name='packed')),
                ('is_labelled', models.BooleanField(default=False, verbose_name='labelled')),
                ('is_labelled_datetime', models.DateTimeField(blank=True, null=True, verbose_name='label-date')),
                ('is_lis', models.BooleanField(default=False, verbose_name='lis')),
                ('aliquot_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td_lab.AliquotType')),
                ('maternal_visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td_maternal.MaternalVisit')),
            ],
            options={
                'verbose_name_plural': 'Maternal Requisition',
                'ordering': ('-created',),
                'verbose_name': 'Maternal Requisition',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('exported', models.BooleanField(default=False, editable=False, help_text="system field for export tracking. considered 'exported' if both sent and received.")),
                ('exported_datetime', models.DateTimeField(editable=False, help_text='system field for export tracking.', null=True)),
                ('export_change_type', models.CharField(choices=[('I', 'Insert'), ('U', 'Update'), ('D', 'Delete')], default='I', editable=False, help_text='system field for export tracking.', max_length=1)),
                ('export_uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False, help_text='system field for export tracking.')),
                ('order_datetime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='OrderIdentifierHistory',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('identifier', models.CharField(editable=False, max_length=36, unique=True)),
                ('padding', models.IntegerField(default=4, editable=False)),
                ('sequence_number', models.IntegerField()),
                ('device_id', models.IntegerField(default=0)),
                ('is_derived', models.BooleanField(default=False)),
                ('sequence_app_label', models.CharField(default='identifier', editable=False, max_length=50)),
                ('sequence_model_name', models.CharField(default='sequence', editable=False, max_length=50)),
                ('exported', models.BooleanField(default=False, editable=False, help_text="system field for export tracking. considered 'exported' if both sent and received.")),
                ('exported_datetime', models.DateTimeField(editable=False, help_text='system field for export tracking.', null=True)),
                ('export_change_type', models.CharField(choices=[('I', 'Insert'), ('U', 'Update'), ('D', 'Delete')], default='I', editable=False, help_text='system field for export tracking.', max_length=1)),
                ('export_uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False, help_text='system field for export tracking.')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('exported', models.BooleanField(default=False, editable=False, help_text="system field for export tracking. considered 'exported' if both sent and received.")),
                ('exported_datetime', models.DateTimeField(editable=False, help_text='system field for export tracking.', null=True)),
                ('export_change_type', models.CharField(choices=[('I', 'Insert'), ('U', 'Update'), ('D', 'Delete')], default='I', editable=False, help_text='system field for export tracking.', max_length=1)),
                ('export_uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False, help_text='system field for export tracking.')),
                ('order_identifier', models.CharField(max_length=25, null=True)),
                ('order_datetime', models.DateTimeField(default=django.utils.timezone.now)),
                ('subject_identifier', models.CharField(help_text='non-user helper field to simplify search and filtering', max_length=50, null=True)),
                ('aliquot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td_lab.Aliquot')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td_lab.Order')),
            ],
            options={
                'ordering': ['-order_datetime'],
            },
        ),
        migrations.CreateModel(
            name='PackingList',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('list_datetime', models.DateTimeField()),
                ('list_comment', models.CharField(blank=True, max_length=100, null=True, verbose_name='Instructions')),
                ('list_items', models.TextField(help_text="List specimen_identifier's. One per line.", max_length=1000)),
                ('timestamp', models.CharField(max_length=35, null=True)),
                ('received', models.BooleanField(default=False, editable=False, help_text='Shipped items are all received at destination')),
                ('exported', models.BooleanField(default=False, editable=False, help_text="system field for export tracking. considered 'exported' if both sent and received.")),
                ('exported_datetime', models.DateTimeField(editable=False, help_text='system field for export tracking.', null=True)),
                ('export_change_type', models.CharField(choices=[('I', 'Insert'), ('U', 'Update'), ('D', 'Delete')], default='I', editable=False, help_text='system field for export tracking.', max_length=1)),
                ('export_uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False, help_text='system field for export tracking.')),
                ('destination', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='lab_packing.Destination', verbose_name='Ship Specimens To')),
            ],
            options={
                'verbose_name': 'Packing List',
            },
        ),
        migrations.CreateModel(
            name='PackingListItem',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('requisition', models.CharField(editable=False, help_text='pk of requisition instance', max_length=36, null=True)),
                ('item_reference', models.CharField(max_length=25)),
                ('item_datetime', models.DateTimeField(blank=True, null=True)),
                ('item_description', models.TextField(blank=True, max_length=100, null=True)),
                ('item_priority', models.CharField(choices=[('normal', 'Normal'), ('urgent', 'Urgent')], max_length=35, null=True)),
                ('old_panel_id', models.CharField(max_length=50, null=True)),
                ('received', models.BooleanField(default=False, editable=False, help_text='Shipped items are all received at destination')),
                ('received_datetime', models.DateTimeField(editable=False, help_text='Date and time shipped item was received at destination', null=True)),
                ('exported', models.BooleanField(default=False, editable=False, help_text="system field for export tracking. considered 'exported' if both sent and received.")),
                ('exported_datetime', models.DateTimeField(editable=False, help_text='system field for export tracking.', null=True)),
                ('export_change_type', models.CharField(choices=[('I', 'Insert'), ('U', 'Update'), ('D', 'Delete')], default='I', editable=False, help_text='system field for export tracking.', max_length=1)),
                ('export_uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False, help_text='system field for export tracking.')),
                ('packing_list', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='td_lab.PackingList')),
            ],
            options={
                'verbose_name': 'Packing List Item',
            },
        ),
        migrations.CreateModel(
            name='Panel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='Panel Name')),
                ('comment', models.CharField(blank=True, max_length=250, verbose_name='Comment')),
                ('panel_type', models.CharField(choices=[('TEST', 'Test panel'), ('STORAGE', 'Storage panel')], default='TEST', max_length=15)),
                ('aliquot_type', models.ManyToManyField(help_text='Choose all that apply', to='td_lab.AliquotType')),
                ('test_code', models.ManyToManyField(blank=True, null=True, related_name='_panel_test_code_+', to='lab_clinic_api.TestCode')),
            ],
        ),
        migrations.CreateModel(
            name='Receive',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('receive_identifier', models.CharField(db_index=True, editable=False, max_length=25, null=True, unique=True, verbose_name='Receiving Identifier')),
                ('requisition_identifier', models.CharField(blank=True, db_index=True, max_length=25, null=True, verbose_name='Requisition Identifier')),
                ('drawn_datetime', models.DateTimeField(db_index=True, validators=[edc_base.model.validators.date.datetime_not_future], verbose_name='Date and time drawn')),
                ('receive_datetime', models.DateTimeField(db_index=True, default=datetime.datetime(2016, 7, 4, 22, 48, 20, 759055), validators=[edc_base.model.validators.date.datetime_not_future], verbose_name='Date and time received')),
                ('visit', models.CharField(max_length=25, verbose_name='Visit Code')),
                ('clinician_initials', edc_base.model.fields.custom_fields.InitialsField(help_text='Type 2-3 letters, all in uppercase and no spaces', max_length=3, verbose_name='Initials')),
                ('receive_condition', models.CharField(max_length=50, null=True, verbose_name='Condition of primary tube')),
                ('import_datetime', models.DateTimeField(null=True)),
                ('exported', models.BooleanField(default=False, editable=False, help_text="system field for export tracking. considered 'exported' if both sent and received.")),
                ('exported_datetime', models.DateTimeField(editable=False, help_text='system field for export tracking.', null=True)),
                ('export_change_type', models.CharField(choices=[('I', 'Insert'), ('U', 'Update'), ('D', 'Delete')], default='I', editable=False, help_text='system field for export tracking.', max_length=1)),
                ('export_uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False, help_text='system field for export tracking.')),
                ('requisition_model_name', models.CharField(editable=False, max_length=25, null=True)),
                ('subject_type', models.CharField(editable=False, max_length=25, null=True)),
                ('registered_subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='microbiome_receive', to='edc_registration.RegisteredSubject')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('result_identifier', models.CharField(db_index=True, editable=False, max_length=25)),
                ('result_datetime', models.DateTimeField(db_index=True, help_text='Date result added to system.')),
                ('release_status', models.CharField(choices=[('NEW', 'New'), ('RELEASED', 'Released'), ('AMENDED', 'Amended')], db_index=True, default='NEW', max_length=25)),
                ('release_datetime', models.DateTimeField(blank=True, db_index=True, help_text='Date result authorized for release. This field will auto-fill if release status is changed', null=True)),
                ('release_username', models.CharField(blank=True, db_index=True, help_text='Username of person authorizing result for release. This field will auto-fill if release status is changed', max_length=50, null=True, verbose_name='Release username')),
                ('comment', models.CharField(blank=True, max_length=50, null=True, verbose_name='Comment')),
                ('dmis_result_guid', models.CharField(blank=True, editable=False, help_text='dmis import value. N/A unless data imported from old system', max_length=36, null=True)),
                ('import_datetime', models.DateTimeField(null=True)),
                ('exported', models.BooleanField(default=False, editable=False, help_text="system field for export tracking. considered 'exported' if both sent and received.")),
                ('exported_datetime', models.DateTimeField(editable=False, help_text='system field for export tracking.', null=True)),
                ('export_change_type', models.CharField(choices=[('I', 'Insert'), ('U', 'Update'), ('D', 'Delete')], default='I', editable=False, help_text='system field for export tracking.', max_length=1)),
                ('export_uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False, help_text='system field for export tracking.')),
                ('subject_identifier', models.CharField(db_index=True, editable=False, help_text='non-user helper field to simplify search and filtering', max_length=50, null=True)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td_lab.OrderItem')),
            ],
            options={
                'ordering': ['result_identifier'],
            },
        ),
        migrations.CreateModel(
            name='ResultItem',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('user_created', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model.fields.userfield.UserField(editable=False, max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(default='One-2.local', editable=False, help_text='System field. (modified on create only)', max_length=50)),
                ('hostname_modified', edc_base.model.fields.hostname_modification_field.HostnameModificationField(editable=False, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('id', edc_base.model.fields.uuid_auto_field.UUIDAutoField(editable=False, help_text='System field. UUID primary key.', primary_key=True, serialize=False)),
                ('result_item_value', models.CharField(db_index=True, max_length=25, verbose_name='Result')),
                ('result_item_value_as_float', models.FloatField(db_index=True, editable=False, null=True, verbose_name='Numeric result')),
                ('result_item_quantifier', models.CharField(choices=[('=', '='), ('>', '>'), ('>=', '>='), ('<', '<'), ('<=', '<=')], default='=', max_length=25, verbose_name='Quantifier')),
                ('result_item_datetime', models.DateTimeField(db_index=True, verbose_name='Assay date and time')),
                ('result_item_operator', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Operator')),
                ('grade_range', models.CharField(blank=True, max_length=25, null=True)),
                ('grade_flag', models.CharField(blank=True, max_length=5, null=True)),
                ('grade_message', models.CharField(blank=True, max_length=50, null=True)),
                ('grade_warn', models.BooleanField(default=False)),
                ('reference_flag', models.CharField(blank=True, max_length=5, null=True)),
                ('reference_range', models.CharField(blank=True, max_length=25, null=True)),
                ('validation_status', models.CharField(choices=[('P', 'Preliminary'), ('F', 'Final'), ('R', 'Rejected')], db_index=True, default='P', help_text='Default is preliminary', max_length=10, verbose_name='Status')),
                ('validation_datetime', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('validation_username', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Validation username')),
                ('validation_reference', models.CharField(blank=True, max_length=50, null=True, verbose_name='Validation reference')),
                ('comment', models.CharField(blank=True, max_length=50, null=True, verbose_name='Validation Comment')),
                ('error_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Error codes')),
                ('subject_identifier', models.CharField(db_index=True, editable=False, help_text='non-user helper field to simplify search and filtering', max_length=50, null=True)),
                ('receive_identifier', models.CharField(db_index=True, editable=False, help_text='non-user helper field to simplify search and filter', max_length=25, null=True)),
                ('import_datetime', models.DateTimeField(null=True)),
                ('exported', models.BooleanField(default=False, editable=False, help_text="system field for export tracking. considered 'exported' if both sent and received.")),
                ('exported_datetime', models.DateTimeField(editable=False, help_text='system field for export tracking.', null=True)),
                ('export_change_type', models.CharField(choices=[('I', 'Insert'), ('U', 'Update'), ('D', 'Delete')], default='I', editable=False, help_text='system field for export tracking.', max_length=1)),
                ('export_uuid', django_extensions.db.fields.UUIDField(blank=True, editable=False, help_text='system field for export tracking.')),
                ('subject_type', models.CharField(max_length=25, null=True)),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td_lab.Result')),
                ('test_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='lab_clinic_api.TestCode')),
            ],
            options={
                'ordering': ('-result_item_datetime',),
            },
        ),
        migrations.AddField(
            model_name='packinglistitem',
            name='panel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='td_lab.Panel'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='panel',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='td_lab.Panel'),
        ),
        migrations.AddField(
            model_name='maternalrequisition',
            name='packing_list',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='td_lab.PackingList'),
        ),
        migrations.AddField(
            model_name='maternalrequisition',
            name='panel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td_lab.Panel'),
        ),
        migrations.AddField(
            model_name='maternalrequisition',
            name='test_code',
            field=models.ManyToManyField(blank=True, null=True, to='lab_clinic_api.TestCode', verbose_name='Additional tests'),
        ),
        migrations.AddField(
            model_name='infantrequisition',
            name='packing_list',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='td_lab.PackingList'),
        ),
        migrations.AddField(
            model_name='infantrequisition',
            name='panel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td_lab.Panel'),
        ),
        migrations.AddField(
            model_name='infantrequisition',
            name='test_code',
            field=models.ManyToManyField(blank=True, null=True, to='lab_clinic_api.TestCode', verbose_name='Additional tests'),
        ),
        migrations.AddField(
            model_name='aliquotprofileitem',
            name='aliquot_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td_lab.AliquotType'),
        ),
        migrations.AddField(
            model_name='aliquotprofileitem',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td_lab.AliquotProfile'),
        ),
        migrations.AddField(
            model_name='aliquotprofile',
            name='aliquot_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='td_lab.AliquotType', verbose_name='Source aliquot type'),
        ),
        migrations.AddField(
            model_name='aliquotprocessing',
            name='profile',
            field=models.ForeignKey(help_text='Create aliquots according to this profile.', on_delete=django.db.models.deletion.CASCADE, to='td_lab.AliquotProfile', verbose_name='Profile'),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='aliquot_condition',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='td_lab.AliquotCondition', verbose_name='Aliquot Condition'),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='aliquot_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='td_lab.AliquotType', verbose_name='Aliquot Type'),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='primary_aliquot',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primary', to='td_lab.Aliquot'),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='receive',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='td_lab.Receive'),
        ),
        migrations.AddField(
            model_name='aliquot',
            name='source_aliquot',
            field=models.ForeignKey(editable=False, help_text='Aliquot from which this aliquot was created, Leave blank if this is the primary tube', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source', to='td_lab.Aliquot'),
        ),
        migrations.AlterUniqueTogether(
            name='maternalrequisition',
            unique_together=set([('maternal_visit', 'panel', 'is_drawn')]),
        ),
        migrations.AlterUniqueTogether(
            name='infantrequisition',
            unique_together=set([('infant_visit', 'panel', 'is_drawn')]),
        ),
        migrations.AlterUniqueTogether(
            name='aliquotprofileitem',
            unique_together=set([('profile', 'aliquot_type')]),
        ),
        migrations.AlterUniqueTogether(
            name='aliquot',
            unique_together=set([('receive', 'count')]),
        ),
    ]
